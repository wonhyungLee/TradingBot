#cloud-config
packages_update: true
packages_upgrade: true
packages:
  - npm
  - python3-pip
  - python3.10-venv
  - net-tools
  - unzip
  - ntp
locale: ko_KR.UTF-8
write_files:
- path: /etc/systemd/system/pm2-root.service
  owner: root:root
  permissions: '0755'
  content: |
    [Unit]
    Description=PM2 process manager
    Documentation=https://pm2.keymetrics.io/
    After=network.target
    [Service]
    Type=forking
    User=root
    LimitNOFILE=infinity
    LimitNPROC=infinity
    LimitCORE=infinity
    Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
    Environment=PM2_HOME=/root/.pm2
    PIDFile=/root/.pm2/pm2.pid
    Restart=on-failure
    ExecStart=/usr/local/lib/node_modules/pm2/bin/pm2 resurrect
    ExecReload=/usr/local/lib/node_modules/pm2/bin/pm2 reload all
    ExecStop=/usr/local/lib/node_modules/pm2/bin/pm2 kill
    [Install]
    WantedBy=multi-user.target
- path: /etc/systemd/system/ntpd-sync.service
  owner: root:root
  permissions: '0755'
  content: |
    [Unit]
    Description=Sync system time every 5 minutes
    [Service]
    Type=oneshot
    ExecStart=/usr/sbin/ntpd -qg
- path: /etc/systemd/system/ntpd-sync.timer
  owner: root:root
  permissions: '0755'
  content: |
    [Unit]
    Description=Run ntpd-sync.service every 5 minutes
    [Timer]
    OnBootSec=5min
    OnUnitActiveSec=5min
    [Install]
    WantedBy=timers.target
- path: /etc/systemd/system/pocketbase.service
  owner: root:root
  permissions: '0755'
  content: |
    [Unit]
    Description=pocketbase
    [Service]
    Type = simple
    User = root
    Group = root
    LimitNOFILE = 4096
    Restart = always
    RestartSec = 5s
    StandardOutput = append:/root/db/errors.log
    StandardError = append:/root/db/errors.log
    ExecStart = /root/db/pocketbase serve --http="0.0.0.0:8090"
    [Install]
    WantedBy=multi-user.target
- path: /root/.env
  content: |
    PASSWORD="dldnjsgud"
    BINANCE_KEY="BpwBMmVky689awdm5WDD3WfupR8RI8DFCIMK3KhwwCwnCDvj4cTLitC6PUOvcewM"
    BINANCE_SECRET="GBXZyTfFJ0pvGmT57NRBcm2fzV8nDO1QpMT5oawUFuyvP7hhwsTaCtRtHBtMoJ6q"
    UPBIT_KEY="ITGBXhszqlx3s1FMPMmxAvgECvb7TCb0cnfbuEKa"
    UPBIT_SECRET="xXX46zgXs3bcxyiabUwb8ZHxF52t1pa27mdxUXKi"
    BYBIT_KEY="kl8YtgWMIoHcinYvuL"
    BYBIT_SECRET="nmR4cIhlFUdQzTXipZx5yAHFprHkbtczQqzX"
    OKX_KEY="363daf27-c4cc-4286-98bc-675e92b5862d"
    OKX_SECRET="0016399E811ABD6BA3A9F3CE1DBBB746"
    OKX_PASSPHRASE="Lee37535**"
    
    # 비트겟 라이브 트레이딩 (기존)
    BITGET_KEY="bg_bc9f50ce52ad58a9cd7c821fbc5ded1c"
    BITGET_SECRET="d8843c00e3ef03cce41a14eaf326f7a86e3335f053be984b92f3e47ae0a20b82"
    BITGET_PASSPHRASE="dldnjsgud"
    
    # 비트겟 데모 트레이딩 (새로 추가)
    BITGET_DEMO_MODE="true"
    BITGET_DEMO_KEY="여기에_비트겟_데모_API_키_입력"
    BITGET_DEMO_SECRET="여기에_비트겟_데모_시크릿_키_입력"
    BITGET_DEMO_PASSPHRASE="dldnjsgud"
    
    KIS1_KEY="PSTSii3nZWq2tsmHZvqNSC8xANlcIQniDfBC"
    KIS1_SECRET="suuUEpTVgZFGUrnQtPJMZVYNkGhJuk3zEp2s3bqicBNhRV1JPjZY3brASjkgtNu0a0uCh2m44f1T6XWluKSYgxUvrG4s+HckVaZG8tvdDpG9Gh/yjhJ+LDJ/jeeYyZvh+Yrt/UEXICg1sCeOzSPpnC2+aqfWt/0GR/jDHMVo+kp4+qDGaVI="
    KIS1_ACCOUNT_NUMBER="46156070"
    KIS1_ACCOUNT_CODE="01"
    KIS2_KEY="PS2DJY5tLASBlNwtKXrqMo523s0ioXupLhoq"
    KIS2_SECRET="TbPrap8LQmyAPfmb1AYjuRPW05h1jBT80uB2nNinv7zIuvhmX8fn11KJX1jqsNWEfSnjOdnPNwG/mlx64ky6G4/7pCbXb0viF2arGBvT3WDKMLXOj8nVUxjEV4FrT9Kq6Bvr0/zr9LzJQf8e9bwA9jxoHVOECSwZ3mAMSS9tMdo4s7uTCyI="
    KIS2_ACCOUNT_NUMBER="46215130"
    KIS2_ACCOUNT_CODE="01"
    KIS3_KEY="PSfQJfMrWB4Bam9UxLMg2MbQeOcqMbu9Sv3T"
    KIS3_SECRET="MwSbweBdRoAlkIFQiBKeudd6VQg8gZUssv2jxeLM+TxCOoBuSmlW0XyYGdQFXKSjpx2SPacbVl0Ig9z2OA87/fe2zkJmUdxtzaOJ9WD0K7D3+FpXFIOj/hVzbMUsWmMIO0oMfc7YPhV60nofw6tw2AQj2Y2VYoQyMcZobeID3yXekXpydDc="
    KIS3_ACCOUNT_NUMBER="64057445"
    KIS3_ACCOUNT_CODE="29"
    KIS4_KEY="PSAMhCEc0tQNW1j76mIUoACDLjRWw4ceNQZg"
    KIS4_SECRET="5ZwxdZDgrpPSWyRoUDtFBXokeMjPCHfzCVv3geDAHItJ190QAZ5GBU9RbMoVdXD7EvQ8Adl3S/zIi3+8tYtCTnkQ9w7hZHb2N1asxA3ETqZ+Y2WJxJOVnjDKa7UZG3yM9KANde0m5+BiUGRifOviNFo61L2ya4ZCeodcr/3AVn5B5gdGkcc="
    KIS4_ACCOUNT_NUMBER="50139358"
    KIS4_ACCOUNT_CODE="01"
    WHITELIST=["127.0.0.1", ""]
    DISCORD_WEBHOOK_URL="https://discord.com/api/webhooks/1324856227678785588/4jrC4j9ru-oB5Zxb0pTRl14bO0mtqwU1Pb_UW5VU51Nvhgr10tKUx66cIA-x78z-H6lF"
    PORT="80"
    DB_ID="poa@admin.com"
    DB_PASSWORD="poabot!@#$"
- path: /etc/environment
  content: |
    DOMAIN=""
    APP_NAME="POA"
  append: true
- path: /root/.bash_functions
  content: |
    #! /bin/bash
    # shellcheck disable=SC1091
    source /etc/environment
    if [[ -z "$DOMAIN" ]]; then
      domain="127.0.0.1"
      is_domain=false
      port="80"
    else
      domain="$DOMAIN"
      is_domain=true
      port="8000"
    fi
    if [[ -z "$APP_NAME" ]]; then
      app_name="POA"
    else
      app_name=$APP_NAME
    fi
    app_dir="/root/$app_name"
    interpreter_path="/root/POA/.venv/bin/python3.10"
    print_env() {
      echo "domain: $domain"
      echo "port: $port"
      echo "app_name: $app_name"
    }
    caddy_start() {
      caddy start --config /etc/caddy/Caddyfile
    }
    caddy_run() {
      caddy run --config /etc/caddy/Caddyfile
    }
    caddy_stop() {
      caddy stop
    }
    flush() {
      pm2 flush
    }
    monitor() {
      pm2 logs
    }
    list() {
      pm2 list
    }
    quit() {
      if [[ $is_domain == true ]]; then
        caddy_stop
      fi
      pm2 delete "$app_name"
    }
    activate() {
      source "$app_dir/.venv/bin/activate"
    }
    pm2_start() {
      pm2 start "$1" --interpreter "$interpreter_path"
    }
    start() {
      quit
      if [[ $is_domain == true ]]; then
        caddy_start
      fi
      flush
      pm2 start "$app_dir/run.py" --name "$app_name" --interpreter "$interpreter_path" -- --port="$port"
    }
    download_poa() {
      git clone https://github.com/wonhyungLee/TradingBot.git "$app_dir"
    }
    download_pocketbase() {
      n=0; while [ $n -lt 5 ] && ! wget "https://github.com/pocketbase/pocketbase/releases/download/v0.16.6/pocketbase_0.16.6_linux_amd64.zip" -O /root/pocketbase.zip || ! unzip -j /root/pocketbase.zip pocketbase -d /root/db; do echo "Failed. Wait for 5 seconds."; sleep 5; n=$((n+1)); done
      rm -rf /root/pocketbase.zip
    }
    download() {
      git clone https://github.com/wonhyungLee/TradingBot.git "$app_dir"
    }
    remove() {
      cd /root
      quit
      rm -rf "$app_dir"
    }
    install() {
      download
      python3.10 -m venv "$app_dir/.venv"
      $interpreter_path -m pip install -r "$app_dir"/requirements.txt
    }
    reinstall() {
      cp -f "$app_dir"/.env /root
      cp -f "$app_dir"/store.db /root
      remove
      install
      cp -f "/root/.env" "$app_dir/.env"
      cp -f "/root/store.db" "$app_dir/store.db"
      rm -rf "/root/.env"
      rm -rf "/root/store.db"
    }
    update() {
      quit
      cd "$app_dir"
      git pull --rebase
      cd /root
      start
    }
    print_env
    export -f print_env
    export -f caddy_start
    export -f caddy_run
    export -f caddy_stop
    export -f flush
    export -f monitor
    export -f list
    export -f quit
    export -f activate
    export -f pm2_start
    export -f start
    export -f download_poa
    export -f download_pocketbase
    export -f download
    export -f remove
    export -f install
    export -f reinstall
    export -f update
- path: /root/.bashrc
  content: |
    if [ -f ~/.bash_functions ]; then
      . ~/.bash_functions
    fi
  append: true
runcmd:
  - export HOME="/root"
  - timedatectl set-timezone Asia/Seoul
  - ufw allow ssh
  - ufw allow 123/udp
  - ufw allow from 52.89.214.238 to any port 80,443 proto tcp
  - ufw allow from 34.212.75.30 to any port 80,443 proto tcp
  - ufw allow from 54.218.53.128 to any port 80,443 proto tcp
  - ufw allow from 52.32.178.7 to any port 80,443 proto tcp
  - ufw --force enable
  - npm install pm2@latest -g
  - npm cache clean -f
  - npm install n -g
  - n stable
  - n=0; while [ $n -lt 5 ] && ! wget https://github.com/caddyserver/caddy/releases/download/v2.6.4/caddy_2.6.4_linux_amd64.tar.gz; do echo "Command failed. Retrying in 5 seconds..."; sleep 5; n=$((n+1)); done
  - tar -xf caddy_*_linux_amd64.tar.gz
  - mv caddy /usr/bin/
  - chmod +x /usr/bin/caddy
  - rm -rf caddy_*_linux_amd64.tar.gz
  - git clone "https://github.com/wonhyungLee/TradingBot.git" /root/POA
  - n=0; while [ $n -lt 5 ] && ! wget "https://github.com/pocketbase/pocketbase/releases/download/v0.16.6/pocketbase_0.16.6_linux_amd64.zip" -O /root/pocketbase.zip || ! unzip -j /root/pocketbase.zip pocketbase -d /root/db; do echo "Failed. Wait for 5 seconds."; sleep 5; n=$((n+1)); done
  - cp -rf /root/POA/pb_data /root/db/pb_data
  - chmod +x /root/db/pocketbase
  - rm -rf /root/pocketbase.zip
  - python3.10 -m venv /root/POA/.venv
  - /root/POA/.venv/bin/python3.10 -m pip install -r /root/POA/requirements.txt
  - cd "/root"
  - cp -f "/root/.env" "/root/POA/.env"
  - rm -rf "/root/.env"
  - systemctl daemon-reload
  - systemctl stop ntp
  - systemctl disable ntp
  - [systemctl, enable, pm2-root.service]
  - [systemctl, enable, pocketbase.service]
  - [systemctl, enable, ntpd-sync.service]
  - [systemctl, enable, ntpd-sync.timer]
  - pm2 start "/root/POA/run.py" --name "POA" --interpreter "/root/POA/.venv/bin/python3.10" -- --port=80
  - pm2 save
power_state:
  delay: "now"
  mode: reboot
  message: Reboot